plugins {
    id 'fabric-loom' version '1.6.12'
    id 'maven-publish'
    id 'java'
}

version = project.mod_version
group = project.maven_group

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    withSourcesJar()
}

repositories {
    // 确保 Sponge 仓库在前面，优先查找
    maven { 
        url 'https://repo.spongepowered.org/maven/' 
        content {
            includeGroup 'org.spongepowered'
        }
    }
    mavenCentral()
    maven { url 'https://maven.fabricmc.net/' }
    maven { url 'https://libraries.minecraft.net/' }
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    
    // 修复 Mixin 依赖 - 使用 Fabric 推荐的版本和配置方式
    modImplementation "org.spongepowered:mixin:0.8.5+mixin.0.8.5"
    annotationProcessor "org.spongepowered:mixin:0.8.5+mixin.0.8.5:processor"
    
    // 添加缺失的依赖库
    implementation "com.mojang:serialization:1.3.25"
    implementation "it.unimi.dsi:fastutil:8.5.12"
}

loom {
    runs {
        client {
            configName "Client"
            ideConfigGenerated true
            source sourceSets.main
        }
        server {
            configName "Server"
            ideConfigGenerated true
            source sourceSets.main
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version
        }
    }
    repositories {
        maven {
            url = uri("file://${project.projectDir}/repo")
        }
    }
}
